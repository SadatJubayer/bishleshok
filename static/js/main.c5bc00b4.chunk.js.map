{"version":3,"sources":["components/NavBar.js","components/Contents.js","components/Topics.js","components/SubTopic.js","components/DataTable.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Component","Contents","props","handleChange","event","setState","seletedId","target","value","handleNext","console","log","state","contents","fetch","method","redirect","then","response","json","result","catch","error","this","forceUpdate","role","viewBox","d","onChange","map","content","i","key","id","roman_index","name","onClick","onNext","data","Topics","topicIdFromProp","cId","topics","SubTopic","subTopicId","subTopic","DataTable","DataId","Data","Month","App","topicsVisible","selectedContentId","subTopicsVisible","selectedTopicId","dataId","dataShow","handleTopics","handleSubTopics","handleData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5bc00b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"flex items-center justify-between flex-wrap bg-teal-500 p-2 pl-6\">\r\n          <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n            <span className=\"font-semibold text-xl tracking-tight\">\r\n              B I S H L E S H O K\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n            <div className=\"text-sm lg:flex-grow\">\r\n              <p className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                Analysis made EASY\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Contents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contents: [],\r\n      seletedId: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch('https://ugly-cobra-39.telebit.io/api/index/', requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({ contents: result }))\r\n      .catch(error => console.log('error', error));\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ seletedId: event.target.value });\r\n  };\r\n\r\n  handleNext = () => {\r\n    console.log('select');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-1/3 shadow-lg p-6 border-r\">\r\n        <div\r\n          className=\"w-full bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md mb-5\"\r\n          role=\"alert\"\r\n        >\r\n          <div className=\"flex\">\r\n            <div className=\"py-1\">\r\n              <svg\r\n                className=\"fill-current h-6 w-6 text-teal-500 mr-4\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <p className=\"font-bold\">Setp 01: Select Contents</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <select\r\n          className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n          onChange={this.handleChange}\r\n        >\r\n          >\r\n          {this.state.contents.map((content, i) => (\r\n            <option key={content.id} value={content.id}>\r\n              {content.roman_index}. {content.name}\r\n            </option>\r\n          ))}\r\n          ;\r\n        </select>\r\n        <button\r\n          onClick={() => this.props.onNext(this.state.seletedId)}\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white text-right font-bold py-2 px-4 rounded mt-5\"\r\n        >\r\n          Next\r\n        </button>\r\n        <p>{this.props.data}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Topics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topicIdFromProp: this.props.cId,\r\n      topics: [],\r\n      seletedId: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.cId);\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\r\n      `https://ugly-cobra-39.telebit.io/api/index/${this.props.cId}/topic/`,\r\n      requestOptions\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setState({ topics: result }))\r\n      //   .then(result => console.log(result))\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ seletedId: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-1/3 shadow-lg p-6 border-r\">\r\n        <div\r\n          className=\"w-full bg-purple-100 border-t-4 border-purple-600 rounded-b text-purple-900 px-4 py-3 shadow-md mb-5\"\r\n          role=\"alert\"\r\n        >\r\n          <div className=\"flex\">\r\n            <div className=\"py-1\">\r\n              <svg\r\n                className=\"fill-current h-6 w-6 text-purple-500 mr-4\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <p className=\"font-bold\">Setp 02: Select Topics</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <select\r\n          className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n          onChange={this.handleChange}\r\n        >\r\n          >\r\n          {this.state.topics.map((content, i) => (\r\n            <option key={content.id} value={content.id}>\r\n              {content.name}\r\n            </option>\r\n          ))}\r\n          ;\r\n        </select>\r\n        <button\r\n          onClick={() => this.props.onNext(this.state.seletedId)}\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white text-right font-bold py-2 px-4 rounded mt-5\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SubTopic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subTopicId: this.props.cId,\r\n      subTopic: [],\r\n      seletedId: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n    fetch(\r\n      `https://ugly-cobra-39.telebit.io/api/topic/${this.props.cId}/subtopic/`,\r\n      requestOptions\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setState({ subTopic: result }))\r\n      //   .then(result => console.log(result))\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\n  handleChange = event => {\r\n    console.log('debug here', event.target.value);\r\n\r\n    this.setState({ seletedId: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-1/3 shadow-lg p-6 border-r\">\r\n        <div\r\n          className=\"w-full bg-pink-100 border-t-4 border-pink-600 rounded-b text-pink-900 px-4 py-3 shadow-md mb-5\"\r\n          role=\"alert\"\r\n        >\r\n          <div className=\"flex\">\r\n            <div className=\"py-1\">\r\n              <svg\r\n                className=\"fill-current h-6 w-6 text-pink-500 mr-4\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <p className=\"font-bold\">Setp 03: Select subTopic</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <select\r\n          className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n          onChange={this.handleChange}\r\n        >\r\n          >\r\n          {this.state.subTopic.map((content, i) => (\r\n            <option key={content.id} value={content.id}>\r\n              {content.name}\r\n            </option>\r\n          ))}\r\n          ;\r\n        </select>\r\n        <button\r\n          onClick={() => this.props.onNext(this.state.seletedId)}\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white text-right font-bold py-2 px-4 rounded mt-5\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DataId: this.props.cId,\r\n      Data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.cId);\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\r\n      `https://ugly-cobra-39.telebit.io/api/subtopic/report/${this.props.cId |\r\n        9}/`,\r\n      requestOptions\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setState({ Data: result }))\r\n      //   .then(result => console.log(result.column))\r\n      .catch(error => console.log('error', error));\r\n    this.forceUpdate();\r\n  }\r\n\r\n  //   getHeaders = () => {\r\n  //     this.state.Data.map(data => <th>{data.Month}</th>);\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"bg-blue-500 text-white font-bold rounded-t px-4 p-2\">\r\n          Data Table\r\n        </div>\r\n        <div className=\"flex justify-center border\">\r\n          <div className=\"m-auto\">\r\n            <table className=\"table-fixed\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2\">Months</th>\r\n                  <th className=\"px-4 py-2\">Category</th>\r\n                  <th className=\"px-4 py-2\">No. of Transaction</th>\r\n                  <th className=\"px-4 py-2\">Amoun of Taka (crore)</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {this.state.Data.map((data, key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td className=\"border px-4 py-2\">{data.Month}</td>\r\n                      <td className=\"border px-4 py-2\">\r\n                        {data['Bank Category']}\r\n                      </td>\r\n                      <td className=\"border px-4 py-2\">\r\n                        {data['Number of Transaction']}\r\n                      </td>\r\n                      <td className=\"border px-4 py-2\">\r\n                        {data['Amount Of Taka In Crore']}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Contents from './components/Contents';\nimport Topics from './components/Topics';\nimport SubTopic from './components/SubTopic';\nimport DataTable from './components/DataTable';\n\nexport default class App extends Component {\n  state = {\n    topicsVisible: false,\n    selectedContentId: null,\n\n    subTopicsVisible: false,\n    selectedTopicId: null,\n\n    dataId: null,\n    dataShow: false\n  };\n\n  handleTopics = id => {\n    console.log(id);\n    this.setState({ selectedContentId: id, topicsVisible: true });\n  };\n\n  handleSubTopics = id => {\n    this.setState({ selectedTopicId: id, subTopicsVisible: true });\n  };\n\n  handleData = id => {\n    this.setState({ dataId: id, dataShow: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar></NavBar>\n        <div className=\"pl-6 flex flex-wrap m-4 p-2 -mx-2\">\n          <Contents onNext={this.handleTopics}></Contents>\n          {this.state.topicsVisible ? (\n            <Topics\n              onNext={this.handleSubTopics}\n              cId={this.state.selectedContentId}\n            ></Topics>\n          ) : (\n            ''\n          )}\n          {this.state.subTopicsVisible ? (\n            <SubTopic\n              onNext={this.handleData}\n              cId={this.state.selectedTopicId}\n            ></SubTopic>\n          ) : (\n            ''\n          )}\n        </div>\n\n        {this.state.dataShow ? (\n          <DataTable cId={this.state.dataId}></DataTable>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}